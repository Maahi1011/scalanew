
spark-config {
}
metastore {
  type: "delta"
  vacuum: 24
  table: "`en_dlake_dev`.work_cnfz.cnfz_metastore"
}
extended: true


source {
  project.name: "PRACTITIONER_CNFZ-PRACTITIONER_BASE-CNFZ"
  mapping: [
    {
      "index": 1
      "id": "practitioner"
	  "source": "s3"
      "location": "`en_dlake_dev`.entity_rawz.practitioner"
      "format": "delta"
      "options": {"readChangeFeed": "true"}
      "stream": true
      "join": "practitioner"
	  "doTransform": "com.hs.bdes.practitioner.PractitionerEntityTransform"
      "columns" : [
             "KAFKA_TS",
             "KAFKA_VALUE as kafka_value",
             "KAFKA_KEY",
             "get_json_object(kafka_value, '$.payload.resourceId') as practitioner_id",
             "get_json_object(kafka_value, '$.payload.resourceId') as practitioner_resource_id",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.npi.value') as npi_num",
             "get_json_object(kafka_value, '$.payload.name.first') as first_nm",
             "get_json_object(kafka_value, '$.payload.name.preferredFirst') as preferred_first_nm",
             "get_json_object(kafka_value, '$.payload.name.middle') as middle_nm",
             "get_json_object(kafka_value, '$.payload.name.last') as last_nm",
             "get_json_object(kafka_value, '$.payload.name.prefix') as name_prefix_txt",
             "get_json_object(kafka_value, '$.payload.name.generationalSuffix') as name_generational_suffix_txt",
             "get_json_object(kafka_value, '$.payload.gender') as gender_desc",
             "get_json_object(kafka_value, '$.payload.activeStatus.value') as status_desc",
             "get_json_object(kafka_value, '$.payload.activeStatus.effectiveDateTime') as status_effective_tms_txt",
             "get_json_object(kafka_value, '$.payload.activeStatus.expirationDateTime') as status_expiration_tms_txt",
             "get_json_object(kafka_value, '$.payload.practitionerType.code') as practitioner_type_cd",
             "get_json_object(kafka_value, '$.payload.practitionerType.name') as practitioner_type_desc",
             "get_json_object(kafka_value, '$.payload.practitionerType.category.code') as practitioner_category_cd",
             "get_json_object(kafka_value, '$.payload.practitionerType.category.name') as practitioner_category_desc",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.npi.issuingAgency') as npi_agency_desc",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.npi.status.value') as npi_status_desc",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.npi.status.effectiveDateTime') as npi_status_effective_tms_txt",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.npi.status.expirationDateTime') as npi_status_expiration_tms_txt",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.medicalEducationNumber.value') as medical_education_num",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.medicalEducationNumber.status.value') as medical_education_nbr_status",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.medicalEducationNumber.status.effectiveDateTime') as medical_education_nbr_status_effective_tms_txt",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.medicalEducationNumber.status.expirationDateTime') as medical_education_nbr_status_expiration_tms_txt",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.spi.value') as spi_id",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.spi.issuingAgency') as spi_id_agency_desc",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.spi.status.value') as spi_id_status_desc",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.spi.status.effectiveDateTime') as spi_id_status_effective_tms_txt",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.spi.status.expirationDateTime') as spi_id_status_expiration_tms_txt",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.militaryIdentifier.value') as military_id",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.militaryIdentifier.issuingAgency') as military_id_agency_desc",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.militaryIdentifier.status.value') as military_id_status_desc",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.militaryIdentifier.status.effectiveDateTime') as military_id_status_effective_tms_txt",
             "get_json_object(kafka_value, '$.payload.agencyIdentifiers.militaryIdentifier.status.expirationDateTime') as military_id_status_expiration_tms_txt",
             "get_json_object(kafka_value, '$.payload.tenantId') as tenant_id"
      ]
    }
  ]

}

target {
  place: "s3"
  options: {
    location: "en_dlake_dev.work_cnfz.practitioner_base"
    streamCheckpointLocation: "s3://hs-bdes-dev-logs/claims/work/checkpoint4stream/practitioner_base"
    streamInterval: "AvailableNow"
    format: "delta"
    compression:"snappy"
    stream: true
    mode: "upsert"
            delta: {
             truncate: true
             upsert: {
               condition: "target.practitioner_id = source.practitioner_id"
              }
             }
  }
  "cols-order": [
    "practitioner_id",
    "practitioner_resource_id",
    "npi_num",
    "first_nm",
    "preferred_first_nm",
    "middle_nm",
    "last_nm",
    "name_prefix_txt",
    "name_generational_suffix_txt",
    "gender_desc",
    "status_desc",
    "status_effective_ts",
    "status_effective_tms_txt",
    "status_effective_timezone_txt",
    "status_expiration_ts",
    "status_expiration_tms_txt",
    "status_expiration_timezone_txt",
    "practitioner_type_cd",
    "practitioner_type_desc",
    "practitioner_category_cd",
    "practitioner_category_desc",
    "tenant_id",
    "data_lake_last_update_ts",
    "npi_agency_desc",
    "npi_status_desc",
    "npi_status_effective_ts",
    "npi_status_effective_tms_txt",
    "npi_status_effective_timezone_txt",
    "npi_status_expiration_ts",
    "npi_status_expiration_tms_txt",
    "npi_status_expiration_timezone_txt",
    "medical_education_num",
    "medical_education_nbr_status",
    "medical_education_nbr_status_effective_ts",
    "medical_education_nbr_status_effective_tms_txt",
    "medical_education_nbr_status_effective_timezone_txt",
    "medical_education_nbr_status_expiration_ts",
    "medical_education_nbr_status_expiration_tms_txt",
    "medical_education_nbr_status_expiration_timezone_txt",
    "spi_id",
    "spi_id_agency_desc",
    "spi_id_status_desc",
    "spi_id_status_effective_ts",
    "spi_id_status_effective_tms_txt",
    "spi_id_status_effective_timezone_txt",
    "spi_id_status_expiration_ts",
    "spi_id_status_expiration_tms_txt",
    "spi_id_status_expiration_timezone_txt",
    "military_id",
    "military_id_agency_desc",
    "military_id_status_desc",
    "military_id_status_effective_ts",
    "military_id_status_effective_tms_txt",
    "military_id_status_effective_timezone_txt",
    "military_id_status_expiration_ts",
    "military_id_status_expiration_tms_txt",
    "military_id_status_expiration_timezone_txt",
    "others.*",
    "languages",
    "store_keys",
    "dea_identifiers",
    "state_license_identifiers",
    "medicaid_identifiers",
    "postal_addresses",
    "email_addresses",
    "phone_numbers",
    "taxonomy"
  ]
}


